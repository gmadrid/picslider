apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

Properties properties = new Properties()
properties.load(project.rootProject.file('keys.properties').newDataInputStream())

def feedlySandboxClient = properties.getProperty('feedly.sandbox.client')
def feedlySandboxSecret = properties.getProperty('feedly.sandbox.secret')

def feedlyDevToken = properties.getProperty('feedly.dev.token')

def dropboxAppId = properties.getProperty('dropbox.app.key')
def dropboxAppSecret = properties.getProperty('dropbox.app.secret')

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.scrawlsoft.picslider"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            resValue "string", "feedly_dev_token", feedlyDevToken

            resValue "string", "feedly_sandbox_client", feedlySandboxClient
            resValue "string", "feedly_sandbox_secret", feedlySandboxSecret

            resValue "string", "dropbox_app_id", dropboxAppId  // UNUSED?
            resValue "string", "dropbox_app_secret", dropboxAppSecret  // UNUSED?

            // Set this to true to use the devtoken. This completely skips the whole OAuth2
            // authentication protocol, and just uses a cached token from keys.properties.
            buildConfigField "boolean", "useFeedlyDevToken", "true"

            // Set this to true to use the Feedly sandbox instead of the prod servers.
            // This is essential until you get a real clientSecret from Feedly.
            // This only has an effect if useFeedlyDevToken is false.
            buildConfigField "boolean", "useSandbox", "true"
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField "boolean", "useFeedlyDevToken", "false"
            buildConfigField "boolean", "useSandbox", "false"
        }
    }
}
kapt {
    generateStubs = true
}
dependencies {
    compile "io.reactivex.rxjava2:rxjava:2.1.8"
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxkotlin:2.1.0'

    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.github.kittinunf.result:result:1.2.0'

    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-moshi:2.3.0'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    compile 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    compile 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.0.0'

    compile 'com.trello.rxlifecycle2:rxlifecycle-android-lifecycle-kotlin:2.2.1'

    compile 'com.dropbox.core:dropbox-core-sdk:3.0.5'

    compile 'com.google.dagger:dagger:2.4'
    kapt 'com.google.dagger:dagger-compiler:2.4'
    provided 'org.glassfish:javax.annotation:10.0-b28'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}
